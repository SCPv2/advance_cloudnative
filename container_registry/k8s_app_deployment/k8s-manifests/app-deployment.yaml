apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  namespace: creative-energy
  labels:
    app: ceweb
    component: app-server
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: ceweb
      component: app-server
  template:
    metadata:
      labels:
        app: ceweb
        component: app-server
    spec:
      imagePullSecrets:
        - name: registry-credentials

      # No init container needed - source code is baked into the image
      containers:
        - name: app-server
          image: {{CONTAINER_REGISTRY_ENDPOINT}}/ceweb/creative-energy-app:configmap
          ports:
            - containerPort: 3000
              name: http

          env:
          # Database configuration from Secret
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: DB_USER
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: db-credentials
                key: DB_PASSWORD

          # SSL and connection settings
          - name: DB_SSL
            value: "false"
          - name: DB_POOL_MIN
            value: "2"
          - name: DB_POOL_MAX
            value: "10"
          - name: DB_POOL_IDLE_TIMEOUT
            value: "30000"
          - name: DB_POOL_CONNECTION_TIMEOUT
            value: "5000"

          # Application settings
          - name: BIND_HOST
            value: "0.0.0.0"

          envFrom:
          - configMapRef:
              name: app-config

          volumeMounts:
          # Only mount the upload files volume, not the source code volume
          - name: upload-files-volume
            mountPath: /home/rocky/ceweb/files
          # Mount master_config.json from ConfigMap
          - name: master-config-volume
            mountPath: /home/rocky/ceweb/web-server/master_config.json
            subPath: master_config.json

          workingDir: /home/rocky/ceweb/app-server

          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"

          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3

          startupProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30

          securityContext:
            runAsUser: 1001
            runAsGroup: 1001
            allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false

      volumes:
      # Only need upload files volume, source code is in the image
      - name: upload-files-volume
        persistentVolumeClaim:
          claimName: upload-files-pvc
      # Master config from ConfigMap
      - name: master-config-volume
        configMap:
          name: master-config

      restartPolicy: Always

      # Node selection (optional)
      nodeSelector:
        kubernetes.io/os: linux

---
# Horizontal Pod Autoscaler for App Server
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: app-hpa
  namespace: creative-energy
  labels:
    app: ceweb
    component: app-server
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: app-deployment
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30

