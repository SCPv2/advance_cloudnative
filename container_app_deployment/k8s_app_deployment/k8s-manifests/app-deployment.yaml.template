apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  namespace: creative-energy
  labels:
    app: ceweb
    component: app-server
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: ceweb
      component: app-server
  template:
    metadata:
      labels:
        app: ceweb
        component: app-server
    spec:
      imagePullSecrets:
      - name: registry-credentials

      # Init container to clone source and install dependencies
      initContainers:
      - name: git-clone-and-setup
        image: node:18-alpine
        command:
        - sh
        - -c
        - |
          echo "Starting app server setup..."
          echo "Installing git..."
          apk add --no-cache git

          echo "Repository: https://github.com/scpv2/ceweb.git"

          # Clean up any existing files
          rm -rf /home/rocky/ceweb

          # Clone the repository
          cd /home/rocky
          git clone https://github.com/scpv2/ceweb.git

          echo "Installing Node.js dependencies..."
          cd /home/rocky/ceweb/app-server
          npm ci --only=production --silent

          echo "Setting up file directories..."
          mkdir -p /home/rocky/ceweb/files

          echo "Creating Object Storage configuration..."
          cat > /home/rocky/ceweb/app-server/master_config.json << 'OBJEOF'
          {
            "obj_storage": {
              "access_key_id": "{{OBJECT_STORAGE_ACCESS_KEY}}",
              "secret_access_key": "{{OBJECT_STORAGE_SECRET_KEY}}",
              "endpoint_url": "{{OBJECT_STORAGE_ENDPOINT}}",
              "region": "kr-west-1",
              "bucket_id": "{{OBJECT_STORAGE_BUCKET_ID}}",
              "bucket_name": "{{OBJECT_STORAGE_BUCKET_NAME}}"
            }
          }
          OBJEOF

          echo "Setting proper permissions..."
          chown -R 1000:1000 /home/rocky/ceweb

          echo "App server source prepared:"
          ls -la /home/rocky/ceweb/app-server/

          echo "Dependencies installed:"
          ls -la /home/rocky/ceweb/app-server/node_modules/ | head -10

          echo "Init container completed successfully"
        volumeMounts:
        - name: source-volume
          mountPath: /home/rocky
        - name: upload-files-volume
          mountPath: /home/rocky/ceweb/files
        securityContext:
          runAsUser: 0  # Run as root for git clone and permission setting

      containers:
      - name: app-server
        image: myregistry-xxxxxxxx.scr.private.kr-west1.e.samsungsdscloud.com/ceweb/app-server:latest
        ports:
        - containerPort: 3000
          name: http

        env:
        # Database configuration from Secret
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: DB_PASSWORD

        # SSL and connection settings
        - name: DB_SSL
          value: "false"
        - name: DB_POOL_MIN
          value: "2"
        - name: DB_POOL_MAX
          value: "10"
        - name: DB_POOL_IDLE_TIMEOUT
          value: "30000"
        - name: DB_POOL_CONNECTION_TIMEOUT
          value: "5000"

        # Application settings
        - name: BIND_HOST
          value: "0.0.0.0"

        envFrom:
        - configMapRef:
            name: app-config

        volumeMounts:
        - name: source-volume
          mountPath: /home/rocky
        - name: upload-files-volume
          mountPath: /home/rocky/ceweb/files

        workingDir: /home/rocky/ceweb/app-server

        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"

        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3

        startupProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30

        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false

      volumes:
      - name: source-volume
        persistentVolumeClaim:
          claimName: source-code-pvc
      - name: upload-files-volume
        persistentVolumeClaim:
          claimName: upload-files-pvc

      restartPolicy: Always

      # Node selection (optional)
      nodeSelector:
        kubernetes.io/os: linux

---
# Horizontal Pod Autoscaler for App Server
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: app-hpa
  namespace: creative-energy
  labels:
    app: ceweb
    component: app-server
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: app-deployment
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30